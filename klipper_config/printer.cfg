# This file contains common pin mappings for MKS Robin Nano (v1.2.004)
# boards. To use this config, the firmware should be compiled for the
# STM32F103. When running "make menuconfig", enable "extra low-level
# configuration setup", select the 28KiB bootloader, and serial (on
# USART3 PB11/PB10) communication.

# Note that the "make flash" command does not work with MKS Robin
# boards. After running "make", run the following command:
#   ./scripts/update_mks_robin.py out/klipper.bin out/Robin_nano.bin
# Copy the file out/Robin_nano.bin to an SD card and then restart the
# printer with that SD card.

# See docs/Config_Reference.md for a description of parameters.
[stepper_x]
step_pin: PE3
dir_pin: !PE2
enable_pin: !PE4
microsteps: 16
rotation_distance: 40
endstop_pin: PA15
position_endstop: 0
position_max: 300
homing_speed: 50

[stepper_y]
step_pin: PE0
dir_pin: !PB9
enable_pin: !PE1
microsteps: 16
rotation_distance: 40
endstop_pin: PA12
position_endstop: 0
position_max: 300
homing_speed: 50

[stepper_z1]
step_pin: PB5
dir_pin: PB4
enable_pin: !PB8
microsteps: 16
rotation_distance: 8
#endstop_pin: PA11 # PC4/PA11 for Z-max/min
endstop_pin: probe:z_virtual_endstop


[stepper_z]
step_pin: PA6
dir_pin: PA1
enable_pin: !PA3
microsteps: 16
rotation_distance: 8
#endstop_pin: PC4 # PC4/PA11 for Z-max/min
endstop_pin: probe:z_virtual_endstop
#position_endstop: 0
position_min: -3.5
position_max: 350

[extruder]
step_pin: PD6
max_extrude_only_distance: 250
dir_pin: !PD3
enable_pin: !PB3
microsteps: 16
rotation_distance: 33.500
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PC3
sensor_type: Generic 3950 #ATC Semitec 104GT-2 #EPCOS 100K B57560G104F
sensor_pin: PC1
control: pid
pid_Kp=22.546
pid_Ki=1.022
pid_Kd=124.285
#pressure_advance: 0.096
min_temp: 0
max_temp: 300
 
[heater_bed]
heater_pin: PA0
sensor_type: Generic 3950 #ATC Semitec 104GT-2
sensor_pin: PC0
control: pid
pid_Kp=70.173
pid_Ki=1.172
pid_Kd=1049.965
min_temp: 0
max_temp: 130
 
[fan]
pin: PB1
 
[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command
 
[printer]
kinematics: corexy
max_velocity: 200
max_accel: 5000
max_z_velocity: 20
max_z_accel: 100
square_corner_velocity: 5 
max_accel_to_decel: 2500
 
[virtual_sdcard]
path: /home/pi/sdcard
 
 
########################################
# TMC2208 configuration
########################################
 
# For TMC2208 UART
#   1) Remove all of the jumpers below the stepper drivers
#   2) Place jumpers on the red pin headers labeled XUART (XUART, YUART etc.)
 
[bed_screws]
screw1: 30,30
screw2: 270,30
screw3: 270,270
screw4: 30,270
 
[output_pin power]
pin:PB2
value: 1.0
shutdown_value: 0.0
 
[gcode_arcs]
resolution: 0.05
 
#[tmc2208 stepper_z]
#microsteps: 16
#run_current: 0.650
#hold_current: 0.450
#stealthchop_threshold: 30
 
#[tmc2208 extruder]
#microsteps: 16
#run_current: 0.800
#hold_current: 0.500
#stealthchop_threshold: 5
 
#[tmc2208 extruder1]
#uart_pin: P1.1
#microsteps: 16
#run_current: 0.800
#hold_current: 0.500
#stealthchop_threshold: 5
 
 
########################################
# TMC2130 configuration
########################################
 
# For TMC SPI
#   1) Place jumpers on all the red pin headers under the stepper drivers
#   2) Remove jumpers from the red pin headers labeled XUART (XUART, YUART etc.)
 
#[tmc2130 stepper_x]
#cs_pin: P1.17
#spi_software_miso_pin: P0.5
#spi_software_mosi_pin: P4.28
#spi_software_sclk_pin: P0.4
##diag1_pin: P1.29
#microsteps: 16
#run_current: 0.800
#hold_current: 0.500
#stealthchop_threshold: 250
 
#[tmc2130 stepper_y]
#cs_pin: P1.15
#spi_software_miso_pin: P0.5
#spi_software_mosi_pin: P4.28
#spi_software_sclk_pin: P0.4
##diag1_pin: P1.27
#microsteps: 16
#run_current: 0.800
#hold_current: 0.500
#stealthchop_threshold: 250
 
#[tmc2130 stepper_z]
#cs_pin: P1.10
#spi_software_miso_pin: P0.5
#spi_software_mosi_pin: P4.28
#spi_software_sclk_pin: P0.4
##diag1_pin: P1.25
#microsteps: 16
#run_current: 0.650
#hold_current: 0.450
#stealthchop_threshold: 30
 
#[tmc2130 extruder]
#cs_pin: P1.8
#spi_software_miso_pin: P0.5
#spi_software_mosi_pin: P4.28
#spi_software_sclk_pin: P0.4
##diag1_pin: P1.28
#microsteps: 16
#run_current: 0.800
#hold_current: 0.500
#stealthchop_threshold: 5
 
#[tmc2130 extruder1]
#cs_pin: P1.1
#spi_software_miso_pin: P0.5
#spi_software_mosi_pin: P4.28
#spi_software_sclk_pin: P0.4
##diag1_pin: P1.26
#microsteps: 16
#run_current: 0.800
#hold_current: 0.500
#stealthchop_threshold: 5
 
[gcode_macro BED_LEVEL]
gcode:
    BED_MESH_CALIBRATE
 
[bltouch]
sensor_pin: PE6 # PC4/PA11 for Z-max/min #PE6 for mtl runout sensor 2 (for Jgarder coreception)
control_pin: PA8
x_offset: 0
y_offset: -20
z_offset: 0.875
pin_move_time: 0.4
probe_with_touch_mode: True
pin_up_touch_mode_reports_triggered: False
 
#[homing_override]
#gcode:
#    G90 ; Use absolute position mode
#    G1 Z10 ; Move up 10mm
#    G28 X Y
#    G1 X150 Y150 F6000 ; Change the X and Y coordinates to the center of your print bed
#    G28 Z
#set_position_z: 0.0
 
[safe_z_home]
home_xy_position: 150,150
speed: 50
z_hop: 10
z_hop_speed: 5
 
[bed_mesh]
speed: 100
mesh_min: 43,20
mesh_max: 280,250
probe_count: 5,5
mesh_pps: 2,2
algorithm: bicubic
bicubic_tension: 0.2
move_check_distance: 3.0
split_delta_z: .010
fade_start: 1.0
fade_end: 5.0
 
[static_digital_output reset_display]
pins: !PC6, !PD13
 
[z_tilt]
z_positions:
	270,175
	  30,175
points:
	30,175
	  270,175
speed: 100
horizontal_move_z: 6
retries: 5
retry_tolerance: 0.01
 
[gcode_macro BED_ALIGN]
gcode:
    {% if printer.homed_axes != 'XYZ' %}
        G28
    {% endif %}

    Z_TILT_ADJUST
    G28 Z

[pause_resume]

[display_status]

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}
#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
 
#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 0.875