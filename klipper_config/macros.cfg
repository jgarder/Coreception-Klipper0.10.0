[gcode_macro CalibrateResonance]
gcode:
    BED_ALIGN
    SHAPER_CALIBRATE



[gcode_macro BED_LEVEL]
gcode:
    BED_MESH_CALIBRATE

[gcode_macro BED_ALIGN]
gcode:
    {% if printer.toolhead.homed_axes != 'XYZ' %}
        G28
    {% endif %}

    Z_TILT_ADJUST
    G28 Z


[gcode_macro BOOTUP_CALIBRATE]
gcode:
    BED_ALIGN
    BED_LEVEL
   
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
    END_PRINT # move out of the way and do other stuff that end of print usually does. 
    TURN_OFF_HEATERS
    CANCEL_PRINT_BASE



[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    ##### set park positon for x and y #####
    # default is your max posion from your printer.cfg
    {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
    {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < (max_z - 2.0) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}
      G1 Z{z_safe} F900
      G90
      G1 X{x_park} Y{y_park} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %} 
    
[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G91
      G1 E{E} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}
[pause_resume]
recover_velocity: 50 #allows pause resume functionality.

#filament runout sensor
[filament_switch_sensor filament_sensor]
switch_pin:PA4
pause_on_runout: false #pause handled by macro
runout_gcode:
  M600 #calls a macro with the name M600 (so it can be called by slicers too)
insert_gcode:
  M117 Filament inserted #just a throwaway GCode command to have something in this space. You can add your own.
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
event_delay: 3.0
pause_delay: 0.0001

#Below Macro with credit to Hywel Martin #https://github.com/KevinOConnor/klipper/issues/1354
[gcode_macro PARK_MACRO]
gcode:
    {% set X = params.X|default(150)|float %}
    {% set Y = params.Y|default(5)|float %}
    {% set Z = params.Z|default(10)|float %}
    M117 PARKING..
    G91
    G1 E-3.14 F1500
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
[gcode_macro PRESENT_HEAD_MACRO]
gcode:
    {% set X = params.X|default(150)|float %}
    {% set Y = params.Y|default(5)|float %}
    {% set Z = params.Z|default(10)|float %}
    M117 PARKING..
    G1 Z{Z} F1500
    G1 X{X} Y{Y} F3000

[gcode_macro UNLOAD]
gcode:
  G91
  G1 E5.0 F1200
  G1 E3.0 F1600
  G1 E-13.14 F7000
  G1 E-100 F3000 #This is a partial unload for the E5, but you need to adjust the default setting for max extrusion from 50
  G90
#[gcode_macro M600]
#gcode:
  #PAUSE_MACRO
  #UNLOAD
######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.


[gcode_macro M600]
gcode:
    {% set X = params.X|default(150)|float %}
    {% set Y = params.Y|default(5)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE_MACRO
    UNLOAD
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro PAUSE_MACRO]
gcode:
  PAUSE
  PARK_MACRO
  SET_IDLE_TIMEOUT TIMEOUT=7200

[gcode_macro PURGE]
gcode:
  M117 PURGING..
  G91
  G1 E45.0 F250
  G90

[gcode_macro LOAD_FILAMENT]
gcode:
  M117  LOADING...
  G91
  G1 E25.0 F1000
  G1 E100 F2500
  G4 P900
  G1 E45.0 F250
  G90

[gcode_macro RESUME_MACRO]
gcode:
  M117  RESUMING...
  RESUME
    # ------------------------- Filament Change --------------------------
# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

#[gcode_macro M600]
#default_parameter_X: 50
#default_parameter_Y: 0
#default_parameter_Z: 10
#gcode:
#    SAVE_GCODE_STATE NAME=M600_state
#    PAUSE
#    G91
#    G1 E-.8 F2700
#    G1 Z{Z}
#    G90
#    G1 X{X} Y{Y} F3000
#    G91
#    G1 E-50 F1000
#    RESTORE_GCODE_STATE NAME=M600_state
# --------------------------------------------------------------------